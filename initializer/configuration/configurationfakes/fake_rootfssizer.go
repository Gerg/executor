// Code generated by counterfeiter. DO NOT EDIT.
package configurationfakes

import (
	"sync"

	"code.cloudfoundry.org/executor/initializer/configuration"
)

type FakeRootFSSizer struct {
	RootFSSizeFromPathStub        func(string) uint64
	rootFSSizeFromPathMutex       sync.RWMutex
	rootFSSizeFromPathArgsForCall []struct {
		arg1 string
	}
	rootFSSizeFromPathReturns struct {
		result1 uint64
	}
	rootFSSizeFromPathReturnsOnCall map[int]struct {
		result1 uint64
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeRootFSSizer) RootFSSizeFromPath(arg1 string) uint64 {
	fake.rootFSSizeFromPathMutex.Lock()
	ret, specificReturn := fake.rootFSSizeFromPathReturnsOnCall[len(fake.rootFSSizeFromPathArgsForCall)]
	fake.rootFSSizeFromPathArgsForCall = append(fake.rootFSSizeFromPathArgsForCall, struct {
		arg1 string
	}{arg1})
	fake.recordInvocation("RootFSSizeFromPath", []interface{}{arg1})
	rootFSSizeFromPathStubCopy := fake.RootFSSizeFromPathStub
	fake.rootFSSizeFromPathMutex.Unlock()
	if rootFSSizeFromPathStubCopy != nil {
		return rootFSSizeFromPathStubCopy(arg1)
	}
	if specificReturn {
		return ret.result1
	}
	fakeReturns := fake.rootFSSizeFromPathReturns
	return fakeReturns.result1
}

func (fake *FakeRootFSSizer) RootFSSizeFromPathCallCount() int {
	fake.rootFSSizeFromPathMutex.RLock()
	defer fake.rootFSSizeFromPathMutex.RUnlock()
	return len(fake.rootFSSizeFromPathArgsForCall)
}

func (fake *FakeRootFSSizer) RootFSSizeFromPathCalls(stub func(string) uint64) {
	fake.rootFSSizeFromPathMutex.Lock()
	defer fake.rootFSSizeFromPathMutex.Unlock()
	fake.RootFSSizeFromPathStub = stub
}

func (fake *FakeRootFSSizer) RootFSSizeFromPathArgsForCall(i int) string {
	fake.rootFSSizeFromPathMutex.RLock()
	defer fake.rootFSSizeFromPathMutex.RUnlock()
	argsForCall := fake.rootFSSizeFromPathArgsForCall[i]
	return argsForCall.arg1
}

func (fake *FakeRootFSSizer) RootFSSizeFromPathReturns(result1 uint64) {
	fake.rootFSSizeFromPathMutex.Lock()
	defer fake.rootFSSizeFromPathMutex.Unlock()
	fake.RootFSSizeFromPathStub = nil
	fake.rootFSSizeFromPathReturns = struct {
		result1 uint64
	}{result1}
}

func (fake *FakeRootFSSizer) RootFSSizeFromPathReturnsOnCall(i int, result1 uint64) {
	fake.rootFSSizeFromPathMutex.Lock()
	defer fake.rootFSSizeFromPathMutex.Unlock()
	fake.RootFSSizeFromPathStub = nil
	if fake.rootFSSizeFromPathReturnsOnCall == nil {
		fake.rootFSSizeFromPathReturnsOnCall = make(map[int]struct {
			result1 uint64
		})
	}
	fake.rootFSSizeFromPathReturnsOnCall[i] = struct {
		result1 uint64
	}{result1}
}

func (fake *FakeRootFSSizer) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.rootFSSizeFromPathMutex.RLock()
	defer fake.rootFSSizeFromPathMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeRootFSSizer) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ configuration.RootFSSizer = new(FakeRootFSSizer)
